{"ast":null,"code":"var _jsxFileName = \"C:\\\\sgweb\\\\client\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        const response = await fetch('/userinfo', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        const data = await response.json();\n        if (data.success) {\n          setUserInfo(data.user_info);\n        } else {\n          console.error(data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const handlePasswordCopy = async () => {\n    if (userInfo && userInfo.salasana) {\n      try {\n        await navigator.clipboard.writeText(userInfo.salasana);\n        alert('Salasana kopioitu leikepöydälle!');\n      } catch (error) {\n        console.error('Error copying password:', error);\n      }\n    }\n  };\n  const handlePasswordChange = event => {\n    setNewPassword(event.target.value);\n  };\n  const handlePasswordUpdate = async () => {\n    try {\n      const response = await fetch('/updatepassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Salasana päivitetty onnistuneesti!');\n        setUserInfo(prevState => ({\n          ...prevState,\n          salasana: newPassword\n        }));\n        setNewPassword('');\n      } else {\n        alert('Salasanan päivitys epäonnistui: ' + data.message);\n      }\n    } catch (error) {\n      console.error('Error updating password:', error);\n    }\n  };\n  const handleDeleteUserInfo = async () => {\n    try {\n      const response = await fetch('/deleteuserinfo', {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Tietue poistettu onnistuneesti!');\n        setUserInfo(null);\n      } else {\n        alert('Tietueen poistaminen epäonnistui: ' + data.message);\n      }\n    } catch (error) {\n      console.error('Error deleting user info:', error);\n    }\n  };\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Ladataan k\\xE4ytt\\xE4j\\xE4n tietoja...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"K\\xE4ytt\\xE4j\\xE4n tiedot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tunnus:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }, this), \" \", userInfo.tunnus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Kohde:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }, this), \" \", userInfo.kohde]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Salasana:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }, this), \" \", userInfo.salasana]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePasswordCopy,\n      children: \"Kopioi salasana leikep\\xF6yd\\xE4lle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"P\\xE4ivit\\xE4 salasana\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Uusi salasana\",\n      value: newPassword,\n      onChange: handlePasswordChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePasswordUpdate,\n      children: \"P\\xE4ivit\\xE4 salasana\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Poista tietue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteUserInfo,\n      children: \"Poista k\\xE4ytt\\xE4j\\xE4n tiedot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"Fv7YL7O+NexzHfy6UGMTZTGVkQc=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserDashboard","_s","userInfo","setUserInfo","newPassword","setNewPassword","fetchUserInfo","response","fetch","method","credentials","data","json","success","user_info","console","error","message","handlePasswordCopy","salasana","navigator","clipboard","writeText","alert","handlePasswordChange","event","target","value","handlePasswordUpdate","headers","body","JSON","stringify","prevState","handleDeleteUserInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","tunnus","kohde","onClick","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/sgweb/client/src/components/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UserDashboard = () => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [newPassword, setNewPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        const response = await fetch('/userinfo', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setUserInfo(data.user_info);\r\n        } else {\r\n          console.error(data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user info:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, []);\r\n\r\n  const handlePasswordCopy = async () => {\r\n    if (userInfo && userInfo.salasana) {\r\n      try {\r\n        await navigator.clipboard.writeText(userInfo.salasana);\r\n        alert('Salasana kopioitu leikepöydälle!');\r\n      } catch (error) {\r\n        console.error('Error copying password:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setNewPassword(event.target.value);\r\n  };\r\n\r\n  const handlePasswordUpdate = async () => {\r\n    try {\r\n      const response = await fetch('/updatepassword', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ newPassword }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert('Salasana päivitetty onnistuneesti!');\r\n        setUserInfo((prevState) => ({ ...prevState, salasana: newPassword }));\r\n        setNewPassword('');\r\n      } else {\r\n        alert('Salasanan päivitys epäonnistui: ' + data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUserInfo = async () => {\r\n    try {\r\n      const response = await fetch('/deleteuserinfo', {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert('Tietue poistettu onnistuneesti!');\r\n        setUserInfo(null);\r\n      } else {\r\n        alert('Tietueen poistaminen epäonnistui: ' + data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting user info:', error);\r\n    }\r\n  };\r\n\r\n  if (!userInfo) {\r\n    return <div>Ladataan käyttäjän tietoja...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Käyttäjän tiedot</h1>\r\n      <p><strong>Tunnus:</strong> {userInfo.tunnus}</p>\r\n      <p><strong>Kohde:</strong> {userInfo.kohde}</p>\r\n      <p><strong>Salasana:</strong> {userInfo.salasana}</p>\r\n      <button onClick={handlePasswordCopy}>Kopioi salasana leikepöydälle</button>\r\n\r\n      <h2>Päivitä salasana</h2>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Uusi salasana\"\r\n        value={newPassword}\r\n        onChange={handlePasswordChange}\r\n      />\r\n      <button onClick={handlePasswordUpdate}>Päivitä salasana</button>\r\n\r\n      <h2>Poista tietue</h2>\r\n      <button onClick={handleDeleteUserInfo}>Poista käyttäjän tiedot</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}