{"ast":null,"code":"var _jsxFileName = \"C:\\\\sgweb\\\\client\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const [userInfos, setUserInfos] = useState([]);\n  const [selectedUserInfo, setSelectedUserInfo] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  useEffect(() => {\n    const fetchUserInfos = async () => {\n      try {\n        const response = await fetch('/userinfos', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        const data = await response.json();\n        if (data.success) {\n          setUserInfos(data.user_infos);\n          setSelectedUserInfo(data.user_infos[0]);\n        } else {\n          console.error(data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching user infos:', error);\n      }\n    };\n    fetchUserInfos();\n  }, []);\n  const handleSelectChange = event => {\n    const selectedId = parseInt(event.target.value, 10);\n    const selectedInfo = userInfos.find(info => info.id === selectedId);\n    setSelectedUserInfo(selectedInfo);\n  };\n  const handlePasswordCopy = async () => {\n    if (selectedUserInfo && selectedUserInfo.salasana) {\n      try {\n        await navigator.clipboard.writeText(selectedUserInfo.salasana);\n        alert('Salasana kopioitu leikepöydälle!');\n      } catch (error) {\n        console.error('Error copying password:', error);\n      }\n    }\n  };\n  const handlePasswordChange = event => {\n    setNewPassword(event.target.value);\n  };\n  const handlePasswordUpdate = async () => {\n    try {\n      const response = await fetch('/updatepassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          id: selectedUserInfo.id,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Salasana päivitetty onnistuneesti!');\n        setUserInfos(prevState => prevState.map(info => info.id === selectedUserInfo.id ? {\n          ...info,\n          salasana: newPassword\n        } : info));\n        setNewPassword('');\n      } else {\n        alert('Salasanan päivitys epäonnistui: ' + data.message);\n      }\n    } catch (error) {\n      console.error('Error updating password:', error);\n    }\n  };\n  const handleDeleteUserInfo = async () => {\n    try {\n      const response = await fetch(`/deleteuserinfo/${selectedUserInfo.id}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Tietue poistettu onnistuneesti!');\n        setUserInfos(prevState => prevState.filter(info => info.id !== selectedUserInfo.id));\n        setSelectedUserInfo(userInfos[0] || null);\n      } else {\n        alert('Tietueen poistaminen epäonnistui: ' + data.message);\n      }\n    } catch (error) {\n      console.error('Error deleting user info:', error);\n    }\n  };\n  if (userInfos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Ladataan k\\xE4ytt\\xE4j\\xE4n tietoja...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"K\\xE4ytt\\xE4j\\xE4n tiedot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleSelectChange,\n      value: selectedUserInfo ? selectedUserInfo.id : '',\n      children: userInfos.map(info => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: info.id,\n        children: info.kohde\n      }, info.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), selectedUserInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tunnus:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 14\n        }, this), \" \", selectedUserInfo.tunnus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Kohde:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 14\n        }, this), \" \", selectedUserInfo.kohde]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Salasana:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 14\n        }, this), \" \", selectedUserInfo.salasana]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePasswordCopy,\n        children: \"Kopioi salasana leikep\\xF6yd\\xE4lle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"P\\xE4ivit\\xE4 salasana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Uusi salasana\",\n        value: newPassword,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePasswordUpdate,\n        children: \"P\\xE4ivit\\xE4 salasana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Poista tietue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteUserInfo,\n        children: \"Poista k\\xE4ytt\\xE4j\\xE4n tiedot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"C9YrhyXuMCY0v0XVXYK5ceZ/MkM=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserDashboard","_s","userInfos","setUserInfos","selectedUserInfo","setSelectedUserInfo","newPassword","setNewPassword","fetchUserInfos","response","fetch","method","credentials","data","json","success","user_infos","console","error","message","handleSelectChange","event","selectedId","parseInt","target","value","selectedInfo","find","info","id","handlePasswordCopy","salasana","navigator","clipboard","writeText","alert","handlePasswordChange","handlePasswordUpdate","headers","body","JSON","stringify","prevState","map","handleDeleteUserInfo","filter","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","kohde","tunnus","onClick","type","placeholder","_c","$RefreshReg$"],"sources":["C:/sgweb/client/src/components/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UserDashboard = () => {\r\n  const [userInfos, setUserInfos] = useState([]);\r\n  const [selectedUserInfo, setSelectedUserInfo] = useState(null);\r\n  const [newPassword, setNewPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfos = async () => {\r\n      try {\r\n        const response = await fetch('/userinfos', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setUserInfos(data.user_infos);\r\n          setSelectedUserInfo(data.user_infos[0]);\r\n        } else {\r\n          console.error(data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user infos:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserInfos();\r\n  }, []);\r\n\r\n  const handleSelectChange = (event) => {\r\n    const selectedId = parseInt(event.target.value, 10);\r\n    const selectedInfo = userInfos.find(info => info.id === selectedId);\r\n    setSelectedUserInfo(selectedInfo);\r\n  };\r\n\r\n  const handlePasswordCopy = async () => {\r\n    if (selectedUserInfo && selectedUserInfo.salasana) {\r\n      try {\r\n        await navigator.clipboard.writeText(selectedUserInfo.salasana);\r\n        alert('Salasana kopioitu leikepöydälle!');\r\n      } catch (error) {\r\n        console.error('Error copying password:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setNewPassword(event.target.value);\r\n  };\r\n\r\n  const handlePasswordUpdate = async () => {\r\n    try {\r\n      const response = await fetch('/updatepassword', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ id: selectedUserInfo.id, newPassword }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert('Salasana päivitetty onnistuneesti!');\r\n        setUserInfos(prevState => prevState.map(info =>\r\n          info.id === selectedUserInfo.id ? { ...info, salasana: newPassword } : info\r\n        ));\r\n        setNewPassword('');\r\n      } else {\r\n        alert('Salasanan päivitys epäonnistui: ' + data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUserInfo = async () => {\r\n    try {\r\n      const response = await fetch(`/deleteuserinfo/${selectedUserInfo.id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert('Tietue poistettu onnistuneesti!');\r\n        setUserInfos(prevState => prevState.filter(info => info.id !== selectedUserInfo.id));\r\n        setSelectedUserInfo(userInfos[0] || null);\r\n      } else {\r\n        alert('Tietueen poistaminen epäonnistui: ' + data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting user info:', error);\r\n    }\r\n  };\r\n\r\n  if (userInfos.length === 0) {\r\n    return <div>Ladataan käyttäjän tietoja...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Käyttäjän tiedot</h1>\r\n      <select onChange={handleSelectChange} value={selectedUserInfo ? selectedUserInfo.id : ''}>\r\n        {userInfos.map(info => (\r\n          <option key={info.id} value={info.id}>\r\n            {info.kohde}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {selectedUserInfo && (\r\n        <div>\r\n          <p><strong>Tunnus:</strong> {selectedUserInfo.tunnus}</p>\r\n          <p><strong>Kohde:</strong> {selectedUserInfo.kohde}</p>\r\n          <p><strong>Salasana:</strong> {selectedUserInfo.salasana}</p>\r\n          <button onClick={handlePasswordCopy}>Kopioi salasana leikepöydälle</button>\r\n\r\n          <h2>Päivitä salasana</h2>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Uusi salasana\"\r\n            value={newPassword}\r\n            onChange={handlePasswordChange}\r\n          />\r\n          <button onClick={handlePasswordUpdate}>Päivitä salasana</button>\r\n\r\n          <h2>Poista tietue</h2>\r\n          <button onClick={handleDeleteUserInfo}>Poista käyttäjän tiedot</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}